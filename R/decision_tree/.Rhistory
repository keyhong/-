data <- df
colnames(data)
#y값 설정.
data <- data %>% mutate(y = ifelse(A11_1 >=1.5, 'mixed', 'rice'))
data <- data %>% select(-X,-A11_1) # 필요없는 변수 제거하는 부분
str(data)
data <- data %>% select(-SQ2,-pay)
#범주형 데이터 factor로 변환
data$package_look1 <- as.factor(data$package_look1)
data$package_yes2 <- as.factor(data$package_yes2)
data$home_lh <- as.factor(data$home_lh)
data$bk_regularly1 <- as.factor(data$bk_regularly1)
data$BA4 <- as.factor(data$BA4)
data$c6_10_1 <- as.factor(data$c6_10_1)
data$c6_3_1 <- as.factor(data$c6_3_1)
data$health1 <- as.factor(data$health1)
data$h1_9_1 <- as.factor(data$h1_9_1)
data$safery_grain1 <- as.factor(data$safery_grain1)
data$natural_helpful <- as.factor(data$natural_helpful)
data$A19 <- as.factor(data$A19)
data$effect_job1 <- as.factor(data$effect_job1)
data$effect_rice1 <- as.factor(data$effect_rice1)
data$five_nutrient1 <- as.factor(data$five_nutrient1)
data$h1_6_2 <- as.factor(data$h1_6_2)
data$solo_eat1 <- as.factor(data$solo_eat1)
data$satisfy1 <- as.factor(data$satisfy1)
data$diet1 <- as.factor(data$diet1)
data$rice_helpful1 <- as.factor(data$rice_helpful1)
data$eat_bk <- as.factor(data$eat_bk)
data$various_food1 <- as.factor(data$various_food1)
data$h1_13_1 <- as.factor(data$h1_13_1)
data$c6_4_2 <- as.factor(data$c6_4_2)
data$h1_2_2 <- as.factor(data$h1_2_2)
data$y <- as.factor(data$y)
table(data$y)
str(data)
str(data)
table(data$y)
#훈련데이터와 시험 데이터 나누기.
train <- createDataPartition(data$y, p=0.75, list =FALSE)
td <- data[train,]
vd <- data[-train,]
rm(train)
colnames(td)
?C5.0Control #세부 설정 설명
c5_options <- C5.0Control(CF = 0.05, noGlobalPruning = FALSE, seed = 1878)#세부 설정
tree1 <- C5.0(y~., data = td,control=c5_options, trials=35) #모델 학습
summary(tree1)
treepred <- predict(tree1, vd,type = 'class') #모델 예측
confusionMatrix(treepred,vd$y) #예측 결과 확인 Accuracy 부분 확인
plot(tree1)
df <- read.csv('./X_chungA.csv') #데이터 파일 읽기
str(df)
data <- df
colnames(data)
#y값 설정.
data <- data %>% mutate(y = ifelse(A11_1 >=1.5, 'mixed', 'rice'))
data <- data %>% select(-X,-A11_1) # 필요없는 변수 제거하는 부분
data <- data %>% select(-SQ2,-pay)
data$y <- as.factor(data$y)
table(data$y)
str(data)
colnames(td)
?C5.0Control #세부 설정 설명
c5_options <- C5.0Control(CF = 0.05, noGlobalPruning = FALSE, seed = 1878)#세부 설정
tree1 <- C5.0(y~., data = td,control=c5_options, trials=35) #모델 학습
summary(tree1)
treepred <- predict(tree1, vd,type = 'class') #모델 예측
confusionMatrix(treepred,vd$y) #예측 결과 확인 Accuracy 부분 확인
plot(tree1)
library(rpart)
?rpart
?rpart.control
cartoption <- rpart.control(cp = 0.007)
tree2 <- rpart(y~., data = td, method = 'class',control = cartoption) #모델 학습
summary(tree2)
plot(tree2)
text(tree2,use.n =TRUE,cex = 0.5, col = 'blue')
treepred <- predict(tree2, vd, type='class')
confusionMatrix(treepred, vd$y)
df <- read.csv('./X_chungA+가구변수.csv') #데이터 파일 읽기
str(df)
df <- read.csv('./X_chungA+가구변수.csv') #데이터 파일 읽기
str(df)
df <- read.csv('./test0.csv') #데이터 파일 읽기
str(df)
# 필요없는 변수 제거하는 부분
data <- df %>% select(-X,
-A10_0,
-A2_1,
-A4,
-A7,
-A8,
-BA1_2,
-BA5,
-F19,
-K2,
-SQ3N,
-SQ3_1N,
-eat_dr,
-eat_lh,
-home_dr,
-korean_food,
-satisfy2,
-SQ1.1)
colnames(data)
#y값 설정.
data <- data %>% mutate(y = ifelse(A11_1 >=1.5, 'mixed', 'rice'))
#범주형 데이터 factor로 변환
data$SQ1 <- as.factor(data$SQ1)
data$SQ2_range <- as.factor(data$SQ2_range)
data$SQ7 <- as.factor(data$SQ7)
data$Dong <- as.factor(data$Dong)
data$A16 <- as.factor(data$A16)
data <- data %>% select(-A11_1)
data$y <- as.factor(data$y)
table(data$y)
#훈련데이터와 시험 데이터 나누기.
train <- createDataPartition(data$y, p=0.75, list =FALSE)
td <- data[train,]
vd <- data[-train,]
rm(train)
colnames(td)
?C5.0Control #세부 설정 설명
c5_options <- C5.0Control(CF = 0.05, noGlobalPruning = FALSE, seed = 1878)#세부 설정
tree1 <- C5.0(y~., data = td,control=c5_options, trials=35) #모델 학습
summary(tree1)
treepred <- predict(tree1, vd,type = 'class') #모델 예측
confusionMatrix(treepred,vd$y) #예측 결과 확인 Accuracy 부분 확인
plot(tree1)
c5_options <- C5.0Control(CF = 0.05, noGlobalPruning = FALSE, seed = 5)#세부 설정
tree1 <- C5.0(y~., data = td,control=c5_options, trials=35) #모델 학습
summary(tree1)
treepred <- predict(tree1, vd,type = 'class') #모델 예측
confusionMatrix(treepred,vd$y) #예측 결과 확인 Accuracy 부분 확인
c5_options <- C5.0Control(CF = 0.05, noGlobalPruning = FALSE, seed = 8)#세부 설정
tree1 <- C5.0(y~., data = td,control=c5_options, trials=35) #모델 학습
summary(tree1)
treepred <- predict(tree1, vd,type = 'class') #모델 예측
confusionMatrix(treepred,vd$y) #예측 결과 확인 Accuracy 부분 확인
df <- read.csv('./X_chungA.csv') #데이터 파일 읽기
str(df)
library(dplyr)
library(caret)
data <- df
colnames(data)
#y값 설정.
data <- data %>% mutate(y = ifelse(A11_1 >=1.5, 'mixed', 'rice'))
data <- data %>% select(-X,-A11_1) # 필요없는 변수 제거하는 부분
data <- data %>% select(-SQ2,-pay)
str(data)
#범주형 데이터 factor로 변환
data$package_look1 <- as.factor(data$package_look1)
data$package_yes2 <- as.factor(data$package_yes2)
data$home_lh <- as.factor(data$home_lh)
data$bk_regularly1 <- as.factor(data$bk_regularly1)
data$BA4 <- as.factor(data$BA4)
data$c6_10_1 <- as.factor(data$c6_10_1)
data$c6_3_1 <- as.factor(data$c6_3_1)
data$health1 <- as.factor(data$health1)
data$h1_9_1 <- as.factor(data$h1_9_1)
data$safery_grain1 <- as.factor(data$safery_grain1)
data$natural_helpful <- as.factor(data$natural_helpful)
data$A19 <- as.factor(data$A19)
data$effect_job1 <- as.factor(data$effect_job1)
data$effect_rice1 <- as.factor(data$effect_rice1)
data$five_nutrient1 <- as.factor(data$five_nutrient1)
data$h1_6_2 <- as.factor(data$h1_6_2)
data$solo_eat1 <- as.factor(data$solo_eat1)
data$satisfy1 <- as.factor(data$satisfy1)
data$diet1 <- as.factor(data$diet1)
data$rice_helpful1 <- as.factor(data$rice_helpful1)
data$eat_bk <- as.factor(data$eat_bk)
data$various_food1 <- as.factor(data$various_food1)
data$h1_13_1 <- as.factor(data$h1_13_1)
data$c6_4_2 <- as.factor(data$c6_4_2)
data$h1_2_2 <- as.factor(data$h1_2_2)
data$y <- as.factor(data$y)
table(data$y)
str(data)
#훈련데이터와 시험 데이터 나누기.
train <- createDataPartition(data$y, p=0.75, list =FALSE)
td <- data[train,]
vd <- data[-train,]
rm(train)
colnames(td)
?C5.0Control #세부 설정 설명
c5_options <- C5.0Control(CF = 0.05, noGlobalPruning = FALSE, seed = 8)#세부 설정
tree1 <- C5.0(y~., data = td,control=c5_options, trials=35) #모델 학습
summary(tree1)
treepred <- predict(tree1, vd,type = 'class') #모델 예측
confusionMatrix(treepred,vd$y) #예측 결과 확인 Accuracy 부분 확인
plot(tree1)
df <- read.csv('./X_chungA_home.csv') #데이터 파일 읽기
str(df)
data <- df
colnames(data)
df <- read.csv('./X_chungA_home.csv') #데이터 파일 읽기
df <- read.csv('./X_chungA_home.csv') #데이터 파일 읽기
df <- read.csv('./X_chungA_home.csv') #데이터 파일 읽기
df <- read.csv('./X_chungA_home.csv') #데이터 파일 읽기
df <- read.csv('./X_chungA.csv') #데이터 파일 읽기
df <- read.csv('./X_chungA_home.csv') #데이터 파일 읽기
df <- read.csv('./X_chungA_home.csv') #데이터 파일 읽기
str(df)
data <- df
#y값 설정.
data <- data %>% mutate(y = ifelse(A11_1 >=1.5, 'mixed', 'rice'))
data <- data %>% select(-X,-A11_1) # 필요없는 변수 제거하는 부분
str(data)
#범주형 데이터 factor로 변환
data$package_look1 <- as.factor(data$package_look1)
data$package_yes2 <- as.factor(data$package_yes2)
data$home_lh <- as.factor(data$home_lh)
data$bk_regularly1 <- as.factor(data$bk_regularly1)
data$BA4 <- as.factor(data$BA4)
data$c6_10_1 <- as.factor(data$c6_10_1)
data$c6_3_1 <- as.factor(data$c6_3_1)
data$health1 <- as.factor(data$health1)
data$h1_9_1 <- as.factor(data$h1_9_1)
data$safery_grain1 <- as.factor(data$safery_grain1)
data$natural_helpful <- as.factor(data$natural_helpful)
data$A19 <- as.factor(data$A19)
data$effect_job1 <- as.factor(data$effect_job1)
data$effect_rice1 <- as.factor(data$effect_rice1)
data$five_nutrient1 <- as.factor(data$five_nutrient1)
data$h1_6_2 <- as.factor(data$h1_6_2)
data$solo_eat1 <- as.factor(data$solo_eat1)
data$satisfy1 <- as.factor(data$satisfy1)
data$diet1 <- as.factor(data$diet1)
data$rice_helpful1 <- as.factor(data$rice_helpful1)
data$eat_bk <- as.factor(data$eat_bk)
data$various_food1 <- as.factor(data$various_food1)
data$h1_13_1 <- as.factor(data$h1_13_1)
data$c6_4_2 <- as.factor(data$c6_4_2)
data$h1_2_2 <- as.factor(data$h1_2_2)
str(data)
df <- read.csv('./X_chungA_home.csv') #데이터 파일 읽기
str(df)
library(dplyr)
library(caret)
library(C50)
library(tree)
library(rpart)
library(party)
library(CHAID)
data <- df
colnames(data)
#y값 설정.
data <- data %>% mutate(y = ifelse(A11_1 >=1.5, 'mixed', 'rice'))
data <- data %>% select(-X,-A11_1) # 필요없는 변수 제거하는 부분
data <- data %>% select(-SQ2,-pay)
str(data)
#범주형 데이터 factor로 변환
data$package_look1 <- as.factor(data$package_look1)
data$package_yes2 <- as.factor(data$package_yes2)
data$home_lh <- as.factor(data$home_lh)
data$bk_regularly1 <- as.factor(data$bk_regularly1)
data$BA4 <- as.factor(data$BA4)
data$c6_10_1 <- as.factor(data$c6_10_1)
data$c6_3_1 <- as.factor(data$c6_3_1)
data$health1 <- as.factor(data$health1)
data$h1_9_1 <- as.factor(data$h1_9_1)
data$safery_grain1 <- as.factor(data$safery_grain1)
data$natural_helpful <- as.factor(data$natural_helpful)
data$A19 <- as.factor(data$A19)
data$effect_job1 <- as.factor(data$effect_job1)
data$effect_rice1 <- as.factor(data$effect_rice1)
data$five_nutrient1 <- as.factor(data$five_nutrient1)
data$h1_6_2 <- as.factor(data$h1_6_2)
data$solo_eat1 <- as.factor(data$solo_eat1)
data$satisfy1 <- as.factor(data$satisfy1)
data$diet1 <- as.factor(data$diet1)
data$rice_helpful1 <- as.factor(data$rice_helpful1)
data$eat_bk <- as.factor(data$eat_bk)
data$various_food1 <- as.factor(data$various_food1)
data$h1_13_1 <- as.factor(data$h1_13_1)
data$c6_4_2 <- as.factor(data$c6_4_2)
data$h1_2_2 <- as.factor(data$h1_2_2)
data$SQ7 <- as.factor(data$SQ7)
data$y <- as.factor(data$y)
table(data$y)
str(data)
#훈련데이터와 시험 데이터 나누기.
train <- createDataPartition(data$y, p=0.75, list =FALSE)
td <- data[train,]
vd <- data[-train,]
rm(train)
colnames(td)
?C5.0Control #세부 설정 설명
c5_options <- C5.0Control(CF = 0.05, noGlobalPruning = FALSE, seed = 8)#세부 설정
tree1 <- C5.0(y~., data = td,control=c5_options, trials=35) #모델 학습
summary(tree1)
treepred <- predict(tree1, vd,type = 'class') #모델 예측
confusionMatrix(treepred,vd$y) #예측 결과 확인 Accuracy 부분 확인
plot(tree1)
df <- read.csv('./X_chungA_home.csv') #데이터 파일 읽기
str(df)
library(dplyr)
library(caret)
library(C50)
library(tree)
library(rpart)
library(party)
library(CHAID)
data <- df
colnames(data)
#y값 설정.
data <- data %>% mutate(y = ifelse(A11_1 >=1.5, 'mixed', 'rice'))
data <- data %>% select(-X,-A11_1) # 필요없는 변수 제거하는 부분
data <- data %>% select(-pay)
str(data)
#범주형 데이터 factor로 변환
data$package_look1 <- as.factor(data$package_look1)
data$package_yes2 <- as.factor(data$package_yes2)
data$home_lh <- as.factor(data$home_lh)
data$bk_regularly1 <- as.factor(data$bk_regularly1)
data$BA4 <- as.factor(data$BA4)
data$c6_10_1 <- as.factor(data$c6_10_1)
data$c6_3_1 <- as.factor(data$c6_3_1)
data$health1 <- as.factor(data$health1)
data$h1_9_1 <- as.factor(data$h1_9_1)
data$safery_grain1 <- as.factor(data$safery_grain1)
data$natural_helpful <- as.factor(data$natural_helpful)
data$A19 <- as.factor(data$A19)
data$effect_job1 <- as.factor(data$effect_job1)
data$effect_rice1 <- as.factor(data$effect_rice1)
data$five_nutrient1 <- as.factor(data$five_nutrient1)
data$h1_6_2 <- as.factor(data$h1_6_2)
data$solo_eat1 <- as.factor(data$solo_eat1)
data$satisfy1 <- as.factor(data$satisfy1)
data$diet1 <- as.factor(data$diet1)
data$rice_helpful1 <- as.factor(data$rice_helpful1)
data$eat_bk <- as.factor(data$eat_bk)
data$various_food1 <- as.factor(data$various_food1)
data$h1_13_1 <- as.factor(data$h1_13_1)
data$c6_4_2 <- as.factor(data$c6_4_2)
data$h1_2_2 <- as.factor(data$h1_2_2)
data$SQ7 <- as.factor(data$SQ7)
data$y <- as.factor(data$y)
table(data$y)
str(data)
#훈련데이터와 시험 데이터 나누기.
train <- createDataPartition(data$y, p=0.75, list =FALSE)
td <- data[train,]
vd <- data[-train,]
rm(train)
colnames(td)
?C5.0Control #세부 설정 설명
c5_options <- C5.0Control(CF = 0.05, noGlobalPruning = FALSE, seed = 8)#세부 설정
tree1 <- C5.0(y~., data = td,control=c5_options, trials=35) #모델 학습
summary(tree1)
treepred <- predict(tree1, vd,type = 'class') #모델 예측
confusionMatrix(treepred,vd$y) #예측 결과 확인 Accuracy 부분 확인
plot(tree1)
cartoption <- rpart.control(cp = 0.007)
tree2 <- rpart(y~., data = td, method = 'class',control = cartoption) #모델 학습
summary(tree2)
plot(tree2)
text(tree2,use.n =TRUE,cex = 0.5, col = 'blue')
treepred <- predict(tree2, vd, type='class')
confusionMatrix(treepred, vd$y)
cartoption <- rpart.control(cp = 0.006)
tree2 <- rpart(y~., data = td, method = 'class',control = cartoption) #모델 학습
summary(tree2)
plot(tree2)
text(tree2,use.n =TRUE,cex = 0.5, col = 'blue')
treepred <- predict(tree2, vd, type='class')
confusionMatrix(treepred, vd$y)
cartoption <- rpart.control(cp = 0.005)
tree2 <- rpart(y~., data = td, method = 'class',control = cartoption) #모델 학습
summary(tree2)
plot(tree2)
text(tree2,use.n =TRUE,cex = 0.5, col = 'blue')
treepred <- predict(tree2, vd, type='class')
confusionMatrix(treepred, vd$y)
cartoption <- rpart.control(cp = 0.004)
tree2 <- rpart(y~., data = td, method = 'class',control = cartoption) #모델 학습
summary(tree2)
plot(tree2)
text(tree2,use.n =TRUE,cex = 0.5, col = 'blue')
treepred <- predict(tree2, vd, type='class')
confusionMatrix(treepred, vd$y)
cartoption <- rpart.control(cp = 0.003)
tree2 <- rpart(y~., data = td, method = 'class',control = cartoption) #모델 학습
summary(tree2)
plot(tree2)
text(tree2,use.n =TRUE,cex = 0.5, col = 'blue')
treepred <- predict(tree2, vd, type='class')
confusionMatrix(treepred, vd$y)
##모든 변수가 범주형이어야함.!!
colnames(td)
data <- df %>% select(-X,
-A10_0,
-A2_1,
-A4,
-A7,
-A8,
-BA1_2,
-BA5,
-F19,
-K2,
-SQ3N,
-SQ3_1N,
-eat_dr,
-eat_lh,
-home_dr,
-korean_food,
-satisfy2,
-SQ1.1)
str(data)
data <- data %>% mutate(y = ifelse(A11_1 >=1.5, 'mixed', 'rice'))
data <- data.frame(lapply(data,as.factor))
data <- data %>% select(-A11_1,-BA1_1)
train <- createDataPartition(data$y, p=0.75, list =FALSE)
td <- data[train,]
vd <- data[-train,]
data <- df
#y값 설정.
data <- data %>% mutate(y = ifelse(A11_1 >=1.5, 'mixed', 'rice'))
data <- data %>% select(-X,-A11_1) # 필요없는 변수 제거하는 부분
data <- data %>% select(-pay)
data <- data %>% select(-SQ2,-pay)
df <- read.csv('./X_chungA_home.csv') #데이터 파일 읽기
str(df)
data <- df
colnames(data)
#y값 설정.
data <- data %>% mutate(y = ifelse(A11_1 >=1.5, 'mixed', 'rice'))
data <- data %>% select(-X,-A11_1) # 필요없는 변수 제거하는 부분
data <- data %>% select(-SQ2,-pay)
data <- data.frame(lapply(data,as.factor))
train <- createDataPartition(data$y, p=0.75, list =FALSE)
td <- data[train,]
vd <- data[-train,]
rm(train)
ctrl <- chaid_control(minsplit =20, minbucket = 5)
tree3 <- chaid(y~., data = td, control = ctrl)
print(tree3)
plot(tree3) # 그림...
summary(tree3)
treepred <- predict(tree3, vd)
confusionMatrix(treepred, vd$y) #정확도 보시오.
library(party)
tree4 <- ctree(y~., data = td)
plot(tree4, cex =1)
treepred <- predict(tree3, vd)
confusionMatrix(treepred,vd$y)
df <- read.csv('./X_chungA_home.csv') #데이터 파일 읽기
str(df)
library(dplyr)
data <- df
colnames(data)
#y값 설정.
data <- data %>% mutate(y = ifelse(A11_1 >=1.5, 'mixed', 'rice'))
data <- data %>% select(-X,-A11_1) # 필요없는 변수 제거하는 부분
data <- data %>% select(-SQ2,-pay)
str(data)
#범주형 데이터 factor로 변환
data$package_look1 <- as.factor(data$package_look1)
data$package_yes2 <- as.factor(data$package_yes2)
data$home_lh <- as.factor(data$home_lh)
data$bk_regularly1 <- as.factor(data$bk_regularly1)
data$BA4 <- as.factor(data$BA4)
data$c6_10_1 <- as.factor(data$c6_10_1)
data$c6_3_1 <- as.factor(data$c6_3_1)
data$health1 <- as.factor(data$health1)
data$h1_9_1 <- as.factor(data$h1_9_1)
data$safery_grain1 <- as.factor(data$safery_grain1)
data$natural_helpful <- as.factor(data$natural_helpful)
data$A19 <- as.factor(data$A19)
data$effect_job1 <- as.factor(data$effect_job1)
data$effect_rice1 <- as.factor(data$effect_rice1)
data$five_nutrient1 <- as.factor(data$five_nutrient1)
data$h1_6_2 <- as.factor(data$h1_6_2)
data$solo_eat1 <- as.factor(data$solo_eat1)
data$satisfy1 <- as.factor(data$satisfy1)
data$diet1 <- as.factor(data$diet1)
data$rice_helpful1 <- as.factor(data$rice_helpful1)
data$eat_bk <- as.factor(data$eat_bk)
data$various_food1 <- as.factor(data$various_food1)
data$h1_13_1 <- as.factor(data$h1_13_1)
data$c6_4_2 <- as.factor(data$c6_4_2)
data$h1_2_2 <- as.factor(data$h1_2_2)
data$SQ7 <- as.factor(data$SQ7)
data$y <- as.factor(data$y)
table(data$y)
str(data)
data$SQ1 <- as.factor(data$SQ1)
data$BA2 <- as.factor(data$BA2)
data$BA2_1 <- as.factor(data$BA2_1)
data$y <- as.factor(data$y)
table(data$y)
str(data)
c5_options <- C5.0Control(CF = 0.05, noGlobalPruning = FALSE, seed = 8)#세부 설정
tree1 <- C5.0(y~., data = td,control=c5_options, trials=35) #모델 학습
summary(tree1)
treepred <- predict(tree1, vd,type = 'class') #모델 예측
confusionMatrix(treepred,vd$y) #예측 결과 확인 Accuracy 부분 확인
#훈련데이터와 시험 데이터 나누기.
train <- createDataPartition(data$y, p=0.75, list =FALSE)
td <- data[train,]
vd <- data[-train,]
rm(train)
c5_options <- C5.0Control(CF = 0.05, noGlobalPruning = FALSE, seed = 8)#세부 설정
tree1 <- C5.0(y~., data = td,control=c5_options, trials=35) #모델 학습
summary(tree1)
treepred <- predict(tree1, vd,type = 'class') #모델 예측
confusionMatrix(treepred,vd$y) #예측 결과 확인 Accuracy 부분 확인
plot(tree1)
treepred <- predict(tree1, vd,type = 'class') #모델 예측
confusionMatrix(treepred,vd$y) #예측 결과 확인 Accuracy 부분 확인
